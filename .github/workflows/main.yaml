name: SQR-Pasynkov-actions

on:
  push:
  pull_request:

jobs:
  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: '1.7.1'
      - name: Cache Poetry virtual environment
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('backend/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - name: Install dependencies
        working-directory: ./backend
        run: poetry install
      - name: Run coverage
        working-directory: ./backend
        run: poetry run pytest --cov=app/ --cov-branch --cov-report=term --cov-fail-under=60
  
  flake:
    name: Flake 8
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: '1.7.1'
      - name: Cache Poetry virtual environment
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('backend/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - name: Install dependencies
        working-directory: ./backend
        run: poetry install
      - name: Run flake8
        working-directory: ./backend
        run: poetry run flake8 --max-complexity=10
  
  bandit:
    name: Bandit
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: '1.7.1'
      - name: Cache Poetry virtual environment
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('backend/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - name: Install dependencies
        working-directory: ./backend
        run: poetry install
      - name: Run bandit
        working-directory: ./backend
        run: poetry run bandit -r app/

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: '1.7.1'
      - name: Cache Poetry virtual environment
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('backend/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      # - name: Install dependencies
      #   run: poetry install
      # - name: Run unit tests
      #   run: poetry run pytest tests/unit

  # e2e-tests:
  #   name: End-to-End Tests
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'pull_request'
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.12'
  #     - name: Install Poetry
  #       uses: abatilo/actions-poetry@v2
  #       with:
  #         poetry-version: '1.7.1'
  #     - name: Cache Poetry virtual environment
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.cache/pypoetry
  #         key: ${{ runner.os }}-poetry-${{ hashFiles('backend/poetry.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-poetry-
  #     # - name: Install dependencies
  #     #   run: poetry install
  #     # - name: Run end-to-end tests
  #     #   run: poetry run pytest tests/e2e
