# generated by fastapi-codegen:
#   filename:  api.swagger.yaml
#   timestamp: 2024-04-18T23:37:43+00:00

from __future__ import annotations

from typing import Annotated
from fastapi import Depends
from fastapi.security import HTTPBasicCredentials, HTTPBasic, HTTPBearer, HTTPAuthorizationCredentials

from app.internals.auth.user import check_user
from app.internals.auth.token import decode_token, create_token
from app.models import User, Error, IncorrectUser, IncorrectToken

basic_security = HTTPBasic()
security = HTTPBearer()


async def get_current_user_basic(credentials: Annotated[HTTPBasicCredentials, Depends(basic_security)]) -> User:
    if not check_user(credentials.username, credentials.password):
        raise IncorrectUser(credentials.username)
    return User(
        username=credentials.username,
        password=credentials.password,
    )


async def get_current_user(token: Annotated[HTTPAuthorizationCredentials, Depends(security)]) -> User:
    user = decode_token(token.credentials)
    if not check_user(user.username, user.password):
        raise IncorrectToken('Bearer')
    return user
